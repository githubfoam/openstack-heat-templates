heat_template_version: 2016-10-14

description: >
  Simple template to build an instance w volume,network,security group,floating ip,

parameters:
  VOLUME_NAME:
    type: string
    description: Name of the system volume of the Virtual Server
    default: Heat_Volume_01

  VOLUME_SIZE:
    type: string
    description: Volume size of the system volume of the Virtual Server
    default: 30

  AZ:
    type: string
    description: Name of the Availability Zone to deploy the Virtual Server in
    default: nova

  FLAVOR:
    type: string
    description: Name or ID of the Flavor type of the Virtual Server to create
    default: S-1

  IMAGE_ID:
    type: string
    description: Image ID or image name to use for the Virtual Server
    default: 123ed3f8-1233-4b14-91c8-feb387d12345

  KEY_NAME:
    type: string
    description: Name of the existing key pair used for the Virtual Server
    default: ubuntu_keys

  SERVER_NAME:
    type: string
    description: Name of the Virtual Server to create
    default: Heat_Server_01

  NETWORK_NAME:
    type: string
    description: NAME of the Network to deploy the Virtual Server on
    default: Heat_Network_01

  NETWORK_ID:
    type: string
    description: ID of the Network to deploy the Virtual Server on
    default: 6eft72d8-a4ad-4h4f-8d2d-76soe8ba122b

  SECURITY_GROUP_NAME:
    type: string
    description: ID of the Security Group associated with the Virtual Server
    default: Heat_Security_Group_01

resources:
  VOLUME_01:
    type: OS::Cinder::Volume
    properties:
      name: { get_param: VOLUME_NAME }
      size: { get_param: VOLUME_SIZE }
      volume_type: "M1"
      image : { get_param: IMAGE_ID }
      availability_zone: { get_param: AZ }

  SERVER_01:
    type: OS::Nova::Server
    properties:
      availability_zone: { get_param: AZ }
      block_device_mapping: [{"volume_size":{ get_param: VOLUME_SIZE }, "volume_id": { get_resource: VOLUME_01 }, "delete_on_termination": True, "device_name": "/dev/vda" }]
      flavor: { get_param: FLAVOR }
      flavor_update_policy: RESIZE
      image: { get_param: IMAGE_ID }
      key_name: { get_param: KEY_NAME }
      name: { get_param: SERVER_NAME }
      networks: [{"network": { get_param: NETWORK_ID }}]
      security_groups: [{ get_param: SECURITY_GROUP_NAME }]
      user_data_format: RAW


outputs:
  SERVER_01_DETAIL:
    description: 
    value: { get_attr: [SERVER_01, show] }

  SERVER_01_NETWORK:
    description: 
    value: { get_attr: [SERVER_01, networks] }

  SERVER_01_IP:
    description: 
    value: { get_attr: [SERVER_01, addresses,{ get_param: NETWORK_NAME }, 0, port] }
            